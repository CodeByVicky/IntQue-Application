// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QAppAPI.Data;

#nullable disable

namespace QAppAPI.Migrations
{
    [DbContext(typeof(QAppDbContext))]
    partial class QAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QAppAPI.Models.JsQuation", b =>
                {
                    b.Property<int>("QNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QNumber"));

                    b.Property<string>("QName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QNumber");

                    b.ToTable("jsQuations");
                });

            modelBuilder.Entity("QAppAPI.Models.ReactQuation", b =>
                {
                    b.Property<int>("QNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QNumber"));

                    b.Property<string>("QName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QNumber");

                    b.ToTable("reactQuations");
                });

            modelBuilder.Entity("QAppAPI.Models.adoDotnetQuation", b =>
                {
                    b.Property<int>("QNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QNumber"));

                    b.Property<string>("QName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QNumber");

                    b.ToTable("adoDotnetQuations");
                });

            modelBuilder.Entity("QAppAPI.Models.aspDotnetQuation", b =>
                {
                    b.Property<int>("QNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QNumber"));

                    b.Property<string>("QName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QNumber");

                    b.ToTable("aspDotnetQuations");
                });

            modelBuilder.Entity("QAppAPI.Models.c_Quation", b =>
                {
                    b.Property<int>("QNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QNumber"));

                    b.Property<string>("QName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QNumber");

                    b.ToTable("c_Quations");
                });

            modelBuilder.Entity("QAppAPI.Models.dotnetQuation", b =>
                {
                    b.Property<int>("QNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QNumber"));

                    b.Property<string>("QName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QNumber");

                    b.ToTable("dotnetQuations");
                });

            modelBuilder.Entity("QAppAPI.Models.javaQuation", b =>
                {
                    b.Property<int>("QNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QNumber"));

                    b.Property<string>("QName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QNumber");

                    b.ToTable("javaQuations");
                });

            modelBuilder.Entity("QAppAPI.Models.mvcDotnetQuation", b =>
                {
                    b.Property<int>("QNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QNumber"));

                    b.Property<string>("QName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QNumber");

                    b.ToTable("mvcDotnetQuations");
                });

            modelBuilder.Entity("QAppAPI.Models.sqlQuation", b =>
                {
                    b.Property<int>("QNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QNumber"));

                    b.Property<string>("QName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QNumber");

                    b.ToTable("sqlQuations");
                });

            modelBuilder.Entity("QAppAPI.Models.webAppDotnetQuation", b =>
                {
                    b.Property<int>("QNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QNumber"));

                    b.Property<string>("QName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QNumber");

                    b.ToTable("webAppDotnetQuations");
                });
#pragma warning restore 612, 618
        }
    }
}
